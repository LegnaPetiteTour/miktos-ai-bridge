# Multi-stage build for production security
FROM python:3.11-alpine3.18 AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk update && apk upgrade && apk add --no-cache \
    git \
    build-base \
    linux-headers \
    && rm -rf /var/cache/apk/*

# Copy requirements and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir --user -r requirements.txt

# Production stage
FROM python:3.11-alpine3.18 AS production

# Security: Update packages and install only runtime dependencies
RUN apk update && apk upgrade && apk add --no-cache \
    curl \
    && rm -rf /var/cache/apk/* \
    && pip install --no-cache-dir --upgrade pip

# Create non-root user
RUN addgroup -g 1001 -S miktos && \
    adduser -u 1001 -S miktos -G miktos

# Set working directory
WORKDIR /app

# Copy installed packages from builder stage
COPY --from=builder /root/.local /home/miktos/.local

# Copy application code
COPY --chown=miktos:miktos . .

# Make sure scripts are executable
RUN chmod +x /app/main.py

# Switch to non-root user
USER miktos

# Set PATH to include user packages
ENV PATH=/home/miktos/.local/bin:$PATH

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/api/v1/health || exit 1

# Security: Use specific user and drop capabilities
CMD ["python", "main.py"]
